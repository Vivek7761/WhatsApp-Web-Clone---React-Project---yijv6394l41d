{"ast":null,"code":"var _jsxFileName = \"E:\\\\WhatsApp-Web-Clone---React-Project---yijv6394l41d\\\\client\\\\src\\\\components\\\\ConversationComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SearchContainer, SearchInput } from \"./ContactListComponent\";\nimport Picker from \"emoji-picker-react\";\nimport { messagesList } from \"../mockData\";\nimport httpManager from \"../managers/httpManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 3;\n  height: 100%;\n  width: 100%;\n  background: #f6f7f8;\n`;\n_c = Container;\nconst ProfileHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  padding: 10px;\n  align-items: center;\n`;\n_c2 = ProfileHeader;\nconst ProfileInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  align-items: center;\n  gap: 10px;\n`;\n_c3 = ProfileInfo;\nconst ProfileImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\n_c4 = ProfileImage;\nconst ContactName = styled.span`\n  font-size: 16px;\n  color: black;\n`;\n_c5 = ContactName;\nconst ChatBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f0f0f0;\n  padding: 10px;\n  align-items: center;\n  bottom: 0;\n`;\n_c6 = ChatBox;\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: auto;\n  background: #e5ddd6;\n`;\n_c7 = MessageContainer;\nconst MessageDiv = styled.div`\n  display: flex;\n  justify-content: ${props => props.isYours ? \"flex-end\" : \"flex-start\"};\n  margin: 5px 15px;\n`;\n_c8 = MessageDiv;\nconst Message = styled.div`\n  background: ${props => props.isYours ? \"#daf8cb\" : \"white\"};\n  padding: 8px 10px;\n  border-radius: 4px;\n  max-width: 50%;\n  color: #303030;\n  font-size: 14px;\n`;\n_c9 = Message;\nconst EmojiImage = styled.img`\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  opacity: 0.4;\n  cursor: pointer;\n`;\n_c10 = EmojiImage;\nfunction ConversationComponent(props) {\n  _s();\n  const {\n    selectedChat,\n    userInfo,\n    refreshContactList\n  } = props;\n  const [text, setText] = useState(\"\");\n  const [pickerVisible, togglePicker] = useState(false);\n  const [messageList, setMessageList] = useState([]);\n  useEffect(() => {\n    setMessageList(selectedChat.channelData.messages);\n  }, [selectedChat]);\n  const onEnterPress = async event => {\n    let channelId = selectedChat.channelData._id;\n    if (event.key === \"Enter\") {\n      if (!messageList || !messageList.length) {\n        const channelUsers = [{\n          email: userInfo.email,\n          name: userInfo.name,\n          profilePic: userInfo.imageUrl\n        }, {\n          email: selectedChat.otherUser.email,\n          name: selectedChat.otherUser.name,\n          profilePic: selectedChat.otherUser.profilePic\n        }];\n        const channelResponse = await httpManager.createChannel({\n          channelUsers\n        });\n        channelId = channelResponse.data.responseData._id;\n      }\n      refreshContactList();\n      const messages = [...messageList];\n      const msgReqData = {\n        text,\n        senderEmail: userInfo.email,\n        addedOn: new Date().getTime()\n      };\n      const messageResponse = await httpManager.sendMessage({\n        channelId,\n        messages: msgReqData\n      });\n      messages.push(msgReqData);\n      setMessageList(messages);\n      setText(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n      children: /*#__PURE__*/_jsxDEV(ProfileInfo, {\n        children: [/*#__PURE__*/_jsxDEV(ProfileImage, {\n          src: selectedChat.otherUser.profilePic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContactName, {\n          children: selectedChat.otherUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageContainer, {\n      children: messageList === null || messageList === void 0 ? void 0 : messageList.map(messageData => /*#__PURE__*/_jsxDEV(MessageDiv, {\n        isYours: messageData.senderEmail === userInfo.email,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          isYours: messageData.senderEmail === userInfo.email,\n          children: [messageData.text]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      children: /*#__PURE__*/_jsxDEV(SearchContainer, {\n        children: [pickerVisible && /*#__PURE__*/_jsxDEV(Picker, {\n          pickerStyle: {\n            position: \"absolute\",\n            bottom: \"60px\"\n          },\n          onEmojiClick: (e, emoji) => {\n            setText(text + emoji.emoji);\n            togglePicker(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EmojiImage, {\n          src: \"/whatsapp-clone/data.svg\",\n          onClick: () => togglePicker(pickerVisible => !pickerVisible)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n          placeholder: \"Type a message\",\n          value: text,\n          onKeyDown: onEnterPress,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(ConversationComponent, \"lD4w3c+f15VdAp+itfsiRAvlBS4=\");\n_c11 = ConversationComponent;\nexport default ConversationComponent;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ProfileHeader\");\n$RefreshReg$(_c3, \"ProfileInfo\");\n$RefreshReg$(_c4, \"ProfileImage\");\n$RefreshReg$(_c5, \"ContactName\");\n$RefreshReg$(_c6, \"ChatBox\");\n$RefreshReg$(_c7, \"MessageContainer\");\n$RefreshReg$(_c8, \"MessageDiv\");\n$RefreshReg$(_c9, \"Message\");\n$RefreshReg$(_c10, \"EmojiImage\");\n$RefreshReg$(_c11, \"ConversationComponent\");","map":{"version":3,"names":["React","useEffect","useState","styled","SearchContainer","SearchInput","Picker","messagesList","httpManager","Container","div","ProfileHeader","ProfileInfo","ProfileImage","img","ContactName","span","ChatBox","MessageContainer","MessageDiv","props","isYours","Message","EmojiImage","ConversationComponent","selectedChat","userInfo","refreshContactList","text","setText","pickerVisible","togglePicker","messageList","setMessageList","channelData","messages","onEnterPress","event","channelId","_id","key","length","channelUsers","email","name","profilePic","imageUrl","otherUser","channelResponse","createChannel","data","responseData","msgReqData","senderEmail","addedOn","Date","getTime","messageResponse","sendMessage","push","map","messageData","position","bottom","e","emoji","target","value"],"sources":["E:/WhatsApp-Web-Clone---React-Project---yijv6394l41d/client/src/components/ConversationComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { SearchContainer, SearchInput } from \"./ContactListComponent\";\nimport Picker from \"emoji-picker-react\";\nimport { messagesList } from \"../mockData\";\nimport httpManager from \"../managers/httpManager\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 3;\n  height: 100%;\n  width: 100%;\n  background: #f6f7f8;\n`;\n\nconst ProfileHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  padding: 10px;\n  align-items: center;\n`;\n\nconst ProfileInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #ededed;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst ProfileImage = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\nconst ContactName = styled.span`\n  font-size: 16px;\n  color: black;\n`;\n\nconst ChatBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f0f0f0;\n  padding: 10px;\n  align-items: center;\n  bottom: 0;\n`;\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: auto;\n  background: #e5ddd6;\n`;\nconst MessageDiv = styled.div`\n  display: flex;\n  justify-content: ${(props) => (props.isYours ? \"flex-end\" : \"flex-start\")};\n  margin: 5px 15px;\n`;\nconst Message = styled.div`\n  background: ${(props) => (props.isYours ? \"#daf8cb\" : \"white\")};\n  padding: 8px 10px;\n  border-radius: 4px;\n  max-width: 50%;\n  color: #303030;\n  font-size: 14px;\n`;\nconst EmojiImage = styled.img`\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  opacity: 0.4;\n  cursor: pointer;\n`;\nfunction ConversationComponent(props) {\n  const { selectedChat, userInfo, refreshContactList } = props;\n  const [text, setText] = useState(\"\");\n  const [pickerVisible, togglePicker] = useState(false);\n  const [messageList, setMessageList] = useState([]);\n\n  useEffect(() => {\n    setMessageList(selectedChat.channelData.messages);\n  }, [selectedChat]);\n\n  const onEnterPress = async (event) => {\n    let channelId = selectedChat.channelData._id;\n    if (event.key === \"Enter\") {\n      if (!messageList || !messageList.length) {\n        const channelUsers = [\n          {\n            email: userInfo.email,\n            name: userInfo.name,\n            profilePic: userInfo.imageUrl,\n          },\n          {\n            email: selectedChat.otherUser.email,\n            name: selectedChat.otherUser.name,\n            profilePic: selectedChat.otherUser.profilePic,\n          },\n        ];\n        const channelResponse = await httpManager.createChannel({\n          channelUsers,\n        });\n        channelId = channelResponse.data.responseData._id;\n      }\n      refreshContactList();\n      const messages = [...messageList];\n      const msgReqData = {\n        text,\n        senderEmail: userInfo.email,\n        addedOn: new Date().getTime(),\n      };\n      const messageResponse = await httpManager.sendMessage({\n        channelId,\n        messages: msgReqData,\n      });\n      messages.push(msgReqData);\n      setMessageList(messages);\n      setText(\"\");\n    }\n  };\n  return (\n    <Container>\n      <ProfileHeader>\n        <ProfileInfo>\n          <ProfileImage src={selectedChat.otherUser.profilePic} />\n          <ContactName>{selectedChat.otherUser.name}</ContactName>\n        </ProfileInfo>\n      </ProfileHeader>\n      <MessageContainer>\n        {messageList?.map((messageData) => (\n          <MessageDiv isYours={messageData.senderEmail === userInfo.email}>\n            <Message isYours={messageData.senderEmail === userInfo.email}>\n              {[messageData.text]}\n            </Message>\n          </MessageDiv>\n        ))}\n      </MessageContainer>\n\n      <ChatBox>\n        <SearchContainer>\n          {pickerVisible && (\n            <Picker\n              pickerStyle={{ position: \"absolute\", bottom: \"60px\" }}\n              onEmojiClick={(e, emoji) => {\n                setText(text + emoji.emoji);\n                togglePicker(false);\n              }}\n            />\n          )}\n          <EmojiImage\n            src={\"/whatsapp-clone/data.svg\"}\n            onClick={() => togglePicker((pickerVisible) => !pickerVisible)}\n          />\n          <SearchInput\n            placeholder=\"Type a message\"\n            value={text}\n            onKeyDown={onEnterPress}\n            onChange={(e) => setText(e.target.value)}\n          />\n        </SearchContainer>\n      </ChatBox>\n    </Container>\n  );\n}\n\nexport default ConversationComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}